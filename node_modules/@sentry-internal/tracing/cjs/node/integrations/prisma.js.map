{"version":3,"file":"prisma.js","sources":["../../../../src/node/integrations/prisma.ts"],"sourcesContent":["import { getCurrentHub, trace } from '@sentry/core';\nimport type { Integration } from '@sentry/types';\nimport { addNonEnumerableProperty, logger } from '@sentry/utils';\n\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils';\n\ntype PrismaAction =\n  | 'findUnique'\n  | 'findMany'\n  | 'findFirst'\n  | 'create'\n  | 'createMany'\n  | 'update'\n  | 'updateMany'\n  | 'upsert'\n  | 'delete'\n  | 'deleteMany'\n  | 'executeRaw'\n  | 'queryRaw'\n  | 'aggregate'\n  | 'count'\n  | 'runCommandRaw';\n\ninterface PrismaMiddlewareParams {\n  model?: unknown;\n  action: PrismaAction;\n  args: unknown;\n  dataPath: string[];\n  runInTransaction: boolean;\n}\n\ntype PrismaMiddleware<T = unknown> = (\n  params: PrismaMiddlewareParams,\n  next: (params: PrismaMiddlewareParams) => Promise<T>,\n) => Promise<T>;\n\ninterface PrismaClient {\n  _sentryInstrumented?: boolean;\n  $use: (cb: PrismaMiddleware) => void;\n}\n\nfunction isValidPrismaClient(possibleClient: unknown): possibleClient is PrismaClient {\n  return !!possibleClient && !!(possibleClient as PrismaClient)['$use'];\n}\n\n/** Tracing integration for @prisma/client package */\nexport class Prisma implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Prisma';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Prisma.id;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { client?: unknown } = {}) {\n    // We instrument the PrismaClient inside the constructor and not inside `setupOnce` because in some cases of server-side\n    // bundling (Next.js) multiple Prisma clients can be instantiated, even though users don't intend to. When instrumenting\n    // in setupOnce we can only ever instrument one client.\n    // https://github.com/getsentry/sentry-javascript/issues/7216#issuecomment-1602375012\n    // In the future we might explore providing a dedicated PrismaClient middleware instead of this hack.\n    if (isValidPrismaClient(options.client) && !options.client._sentryInstrumented) {\n      addNonEnumerableProperty(options.client as any, '_sentryInstrumented', true);\n\n      options.client.$use((params, next: (params: PrismaMiddlewareParams) => Promise<unknown>) => {\n        if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n          return next(params);\n        }\n\n        const action = params.action;\n        const model = params.model;\n        return trace(\n          { name: model ? `${model} ${action}` : action, op: 'db.sql.prisma', data: { 'db.system': 'prisma' } },\n          () => next(params),\n        );\n      });\n    } else {\n      __DEBUG_BUILD__ &&\n        logger.warn(\n          `Unsupported Prisma client provided to PrismaIntegration. Provided client: ${JSON.stringify(options.client)}`,\n        );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    // Noop - here for backwards compatibility\n  }\n}\n"],"names":["addNonEnumerableProperty","shouldDisableAutoInstrumentation","getCurrentHub","trace","logger"],"mappings":";;;;;;AAyCA,SAAA,mBAAA,CAAA,cAAA,EAAA;AACA,EAAA,OAAA,CAAA,CAAA,cAAA,IAAA,CAAA,CAAA,CAAA,cAAA,GAAA,MAAA,CAAA,CAAA;AACA,CAAA;AACA;AACA;AACA,MAAA,MAAA,EAAA;AACA;AACA;AACA;AACA,GAAA,OAAA,YAAA,GAAA,CAAA,IAAA,CAAA,EAAA,GAAA,SAAA,CAAA;AACA;AACA;AACA;AACA;AACA,GAAA,MAAA,GAAA,CAAA,IAAA,CAAA,IAAA,GAAA,MAAA,CAAA,GAAA,CAAA;AACA;AACA;AACA;AACA;AACA,GAAA,WAAA,CAAA,OAAA,GAAA,EAAA,EAAA,CAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,IAAA,mBAAA,CAAA,OAAA,CAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA,MAAA,CAAA,mBAAA,EAAA;AACA,MAAAA,8BAAA,CAAA,OAAA,CAAA,MAAA,GAAA,qBAAA,EAAA,IAAA,CAAA,CAAA;AACA;AACA,MAAA,OAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,MAAA,EAAA,IAAA,KAAA;AACA,QAAA,IAAAC,0CAAA,CAAAC,kBAAA,CAAA,EAAA;AACA,UAAA,OAAA,IAAA,CAAA,MAAA,CAAA,CAAA;AACA,SAAA;AACA;AACA,QAAA,MAAA,MAAA,GAAA,MAAA,CAAA,MAAA,CAAA;AACA,QAAA,MAAA,KAAA,GAAA,MAAA,CAAA,KAAA,CAAA;AACA,QAAA,OAAAC,UAAA;AACA,UAAA,EAAA,IAAA,EAAA,KAAA,GAAA,CAAA,EAAA,KAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,GAAA,MAAA,EAAA,EAAA,EAAA,eAAA,EAAA,IAAA,EAAA,EAAA,WAAA,EAAA,QAAA,EAAA,EAAA;AACA,UAAA,MAAA,IAAA,CAAA,MAAA,CAAA;AACA,SAAA,CAAA;AACA,OAAA,CAAA,CAAA;AACA,KAAA,MAAA;AACA,MAAA,CAAA,OAAA,gBAAA,KAAA,WAAA,IAAA,gBAAA;AACA,QAAAC,YAAA,CAAA,IAAA;AACA,UAAA,CAAA,0EAAA,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA,CAAA;AACA,SAAA,CAAA;AACA,KAAA;AACA,GAAA;AACA;AACA;AACA;AACA;AACA,GAAA,SAAA,GAAA;AACA;AACA,GAAA;AACA,CAAA,CAAA,MAAA,CAAA,YAAA,EAAA;;;;"}